[metadata]
name = snake-game-classic
version = 0.1.0-alpha.1
author = Vitor
author_email = your.email@example.com
description = A modern implementation of the classic Snake game with configurable modes (Alpha Version)
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/yourusername/classic-games-python
project_urls =
    Bug Tracker = https://github.com/yourusername/classic-games-python/issues
    Source Code = https://github.com/yourusername/classic-games-python/tree/main/snake
    Documentation = https://github.com/yourusername/classic-games-python/blob/main/snake/README.md
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: End Users/Desktop
    Intended Audience :: Developers
    Topic :: Games/Entertainment :: Arcade
    Topic :: Software Development :: Libraries :: pygame
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Operating System :: OS Independent

[options]
packages = find:
python_requires = >=3.8
install_requires =
    pygame>=2.1.0

[options.packages.find]
exclude =
    tests*

[options.extras_require]
dev =
    pytest>=6.0
    pytest-cov>=2.0
    black>=22.0
    flake8>=4.0
    mypy>=0.950
    pre-commit>=2.0
    build>=0.8
    twine>=4.0
    pyinstaller>=5.0
    bumpversion>=0.6

[options.entry_points]
console_scripts =
    snake-game = snake_game.main:main

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = --strict-markers --disable-warnings --cov=snake_game --cov-report=term-missing
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests

[coverage:run]
source = snake_game
omit =
    tests/*
    setup.py
    */migrations/*
    */venv/*
    */virtualenv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .venv,
    *.egg-info

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
ignore_missing_imports = True
show_error_codes = True
strict_optional = True

[mypy-tests.*]
ignore_errors = True

[bdist_wheel]
# Remove universal wheel support (deprecated with Python 2 EOL)
# universal = 1
