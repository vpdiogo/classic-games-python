name: Build and Release Snake Game

on:
  push:
    tags:
      - 'v*'
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Run tests
      run: |
        make test

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install pyinstaller

    - name: Build package
      run: python -m build

    - name: Build executable (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --name SnakeGame-linux snake_game/main.py

    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --name SnakeGame-windows.exe snake_game/main.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: snake-game-${{ matrix.os }}
        path: |
          dist/

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download Ubuntu artifacts
      uses: actions/download-artifact@v3
      with:
        name: snake-game-ubuntu-latest
        path: dist-ubuntu/

    - name: Download Windows artifacts
      uses: actions/download-artifact@v3
      with:
        name: snake-game-windows-latest
        path: dist-windows/

    - name: Create release directory
      run: |
        mkdir -p release-files
        cp dist-ubuntu/*.whl release-files/ || true
        cp dist-ubuntu/*.tar.gz release-files/ || true
        cp dist-ubuntu/SnakeGame-linux release-files/ || true
        cp dist-windows/SnakeGame-windows.exe release-files/ || true
        ls -la release-files/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-files/*
        generate_release_notes: true
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
